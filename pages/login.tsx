import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import React, { useState } from 'react';
import Box from '@mui/material/Box';
import LinearProgress from '@mui/material/LinearProgress';
import { useForm, SubmitHandler } from 'react-hook-form';
import { Alert } from '@mui/material';
import { useRouter } from 'next/router';
import { useAppDispatch, useAppSelector } from '../hooks/hooks';
import { authSelector } from '../redux/selector';
import { login, signup } from '../features/authSlice';

interface Inputs {
    email: string;
    password: string;
}

function Login() {
    const [show, setShow] = useState<boolean>(false);
    const [isLogin, setIsLogin] = useState<boolean>(false);
    const {
        register,
        handleSubmit,
        watch,
        formState: { errors },
    } = useForm<Inputs>();
    const router = useRouter();
    const { error: authError, loading } = useAppSelector(authSelector);
    const dispatch = useAppDispatch();

    const onSubmit: SubmitHandler<Inputs> = async (data) => {
        if (isLogin) {
            const { email, password } = data;
            const resultAction = await dispatch(
                login({
                    email,
                    password,
                }),
            );
            router.push('/');
        } else {
            // SignUp
            const { email, password } = data;

            const resultAction = await dispatch(
                signup({
                    email,
                    password,
                }),
            );
            router.push('/');
        }
    };

    return (
        <div className="relative flex md:flex-row w-screen min-h-screen flex-col bg-black md:items-center md:justify-center md:bg-transparent">
            <Head>
                <title>Netflix - Login</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Image
                src="/Netflix-background.jpg"
                alt="background"
                fill
                className="-z-10 !hidden opacity-60 sm:!inline"
                priority={true}
                sizes="large"
            />
            <div className="absolute top-0 left-0">
                <div className="relative w-48 h-28">
                    <Image
                        src="/Netflix-Brand-Logo.png"
                        alt="Logo"
                        fill
                        sizes="large"
                    />
                </div>
            </div>
            <form
                className="relative mt-24 space-y-8 p-6 md:py-12 md:mb-16 md:max-w-md md:px-14 bg-black/75"
                onSubmit={handleSubmit(onSubmit)}
            >
                {authError && <Alert severity="error">{authError}</Alert>}

                <h1 className="text-3xl font-semibold">Sign In</h1>
                <div className="space-y-4">
                    <label className="inline-block w-full">
                        <input
                            placeholder="Email or phone number"
                            type="email"
                            className="input"
                            {...register('email', {
                                required: true,
                            })}
                        />
                        {errors.email && (
                            <p className="p-1 text-[13px] font-light text-orange-500">
                                Please enter a valid email or phone number.
                            </p>
                        )}
                    </label>

                    <label className="inline-block w-full">
                        <input
                            {...register('password', {
                                required: true,
                            })}
                            placeholder="Password"
                            type="password"
                            className="input"
                        />
                        {errors.password && (
                            <p className="p-1 text-[13px] font-light text-orange-500">
                                Your password must contain between 4 and 60
                                characters.
                            </p>
                        )}
                    </label>
                </div>

                <div className="space-y-2">
                    <button
                        type="submit"
                        className="w-full rounded bg-[#e50914] py-3 font-semibold"
                        onClick={() => setIsLogin(true)}
                    >
                        Sign In
                    </button>

                    <div className="flex flex-row justify-between text-[gray] text-sm">
                        <div className="flex flex-row items-center space-x-1">
                            <input
                                id="remember"
                                type="checkbox"
                                className="text-red-500"
                            />
                            <label htmlFor="remember">Remember me</label>
                        </div>
                        <span>Need help?</span>
                    </div>
                </div>

                <div className="text-[gray] space-y-2">
                    <div className="space-x-2 text-base">
                        <span>New to Netflix?</span>
                        <button
                            className="text-white hover:underline"
                            onClick={() => setIsLogin(false)}
                        >
                            Sign up now
                        </button>
                    </div>
                    <p className="text-[#8c8c8c] text-sm">
                        This page is protected by Google reCAPTCHA to ensure
                        you&apos;re not a bot.{' '}
                        <span
                            className={`text-[#0080ff] cursor-pointer ${
                                show && 'hidden'
                            }`}
                            onClick={() => setShow(true)}
                        >
                            Learn more.
                        </span>
                    </p>
                    <p
                        className={`text-[#8c8c8c] text-sm ${
                            !show && 'hidden'
                        }`}
                    >
                        The information collected by Google reCAPTCHA is subject
                        to the Google{' '}
                        <Link href="/privacy" className="text-[#0080ff]">
                            Privacy Policy
                        </Link>{' '}
                        and{' '}
                        <Link href="/terms" className="text-[#0080ff]">
                            Terms of Service
                        </Link>
                        , and is used for providing, maintaining, and improving
                        the reCAPTCHA service and for general security purposes
                        (it is not used for personalized advertising by Google).
                    </p>
                </div>
            </form>

            {loading && (
                <div className="absolute bottom-10 left-1/2 -translate-x-1/2 right-0">
                    <Box sx={{ width: '100%' }}>
                        <LinearProgress color="info" />
                    </Box>
                </div>
            )}
        </div>
    );
}

export default Login;
